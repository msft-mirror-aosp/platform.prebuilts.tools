# Copyright (C) 2024 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

buffers: {
    size_kb: 204800
    fill_policy: RING_BUFFER
}
buffers: {
    size_kb: 204800
    fill_policy: RING_BUFFER
}
data_sources: {
    config {
        name: "linux.process_stats"
        target_buffer: 1
        process_stats_config {
            scan_all_processes_on_start: true
        }
    }
}
data_sources {
  config {
    name: "linux.system_info"
    target_buffer: 1
  }
}
data_sources: {
    config {
        name: "android.surfaceflinger.frametimeline"
    }
}
data_sources: {
    config {
        name: "linux.ftrace"
        ftrace_config {
            ftrace_events: "sched/sched_switch"
            ftrace_events: "power/suspend_resume"
            ftrace_events: "sched/sched_wakeup"
            ftrace_events: "sched/sched_wakeup_new"
            ftrace_events: "sched/sched_waking"
            ftrace_events: "power/cpu_frequency"
            ftrace_events: "power/cpu_idle"
            ftrace_events: "mm_event/mm_event_record"
            ftrace_events: "kmem/rss_stat"
            ftrace_events: "ion/ion_stat"
            ftrace_events: "dmabuf_heap/dma_heap_stat"
            ftrace_events: "kmem/ion_heap_grow"
            ftrace_events: "kmem/ion_heap_shrink"
            ftrace_events: "sched/sched_migrate_task"
            ftrace_events: "sched/sched_process_exit"
            ftrace_events: "sched/sched_process_free"
            ftrace_events: "task/task_newtask"
            ftrace_events: "task/task_rename"
            ftrace_events: "lowmemorykiller/lowmemory_kill"
            ftrace_events: "oom/oom_score_adj_update"
            ftrace_events: "sched/sched_blocked_reason"
            ftrace_events: "workqueue/*"
            ftrace_events: "f2fs/f2fs_iostat"
            ftrace_events: "f2fs/f2fs_write_end"
	    ftrace_events: "vmscan/*"
            ftrace_events: "ftrace/print"
	    ftrace_events: "power/wakeup_source_activate"
            ftrace_events: "power/wakeup_source_deactivate"
            atrace_categories: "aidl"
            atrace_categories: "am"
            atrace_categories: "dalvik"
            atrace_categories: "binder_driver"
            atrace_categories: "bionic"
            atrace_categories: "camera"
            atrace_categories: "gfx"
            atrace_categories: "hal"
            atrace_categories: "input"
	    atrace_categories: "network"
            atrace_categories: "pm"
            atrace_categories: "power"
            atrace_categories: "res"
            atrace_categories: "sm"
            atrace_categories: "ss"
            atrace_categories: "video"
            atrace_categories: "view"
            atrace_categories: "wm"
            atrace_apps: "lmkd"
            atrace_apps: "*"
            buffer_size_kb: 16384
            drain_period_ms: 250
            throttle_rss_stat: true
            symbolize_ksyms: true
            ksyms_mem_policy: KSYMS_RETAIN
            disable_generic_events: true
            compact_sched { enabled: true }
            preserve_ftrace_buffer: true
        }
    }
}
# 40s trace, but can be stopped prematurely via `adb shell pkill perfetto`.
file_write_period_ms: 5000
max_file_size_bytes: 1000000000
flush_period_ms: 30000
incremental_state_config {
    clear_period_ms: 5000
}

trigger_config {
  trigger_mode: STOP_TRACING
  triggers {
    name: "boottrace_boot_completed"
    stop_delay_ms: 15000
  }
  trigger_timeout_ms: 100000
}
