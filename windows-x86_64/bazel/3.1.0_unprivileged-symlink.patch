From 8fc660dbdf7457b7a4c4ace29dc4dc23e4f4a329 Mon Sep 17 00:00:00 2001
From: tomrenn <tomrenn@google.com>
Date: Fri, 14 Aug 2020 10:09:35 -0700
Subject: [PATCH 3/3] Check Windows registry if unprivileged symlink creation
 is supported.

Performing this check avoids creating an unnecessary symlink.

Closes #11779

PiperOrigin-RevId: 326677826
---
 src/main/tools/BUILD                     |  6 +++++
 src/main/tools/build-runfiles-windows.cc | 28 ++++++++++++++++--------
 2 files changed, 25 insertions(+), 9 deletions(-)

diff --git a/src/main/tools/BUILD b/src/main/tools/BUILD
index cb2548c8b7..4167a605d9 100644
--- a/src/main/tools/BUILD
+++ b/src/main/tools/BUILD
@@ -55,6 +55,12 @@ cc_binary(
         "//src/conditions:windows": ["build-runfiles-windows.cc"],
         "//conditions:default": ["build-runfiles.cc"],
     }),
+    linkopts = select({
+        "//src/conditions:windows": [
+            "-DEFAULTLIB:advapi32.lib",  # RegGetValueW
+        ],
+        "//conditions:default": [],
+    }),
     deps = ["//src/main/cpp/util:filesystem"] + select({
         "//src/conditions:windows": ["//src/main/native/windows:lib-file"],
         "//conditions:default": [],
diff --git a/src/main/tools/build-runfiles-windows.cc b/src/main/tools/build-runfiles-windows.cc
index ca744de4e3..8d7ec8019b 100644
--- a/src/main/tools/build-runfiles-windows.cc
+++ b/src/main/tools/build-runfiles-windows.cc
@@ -15,9 +15,8 @@
 #ifndef WIN32_LEAN_AND_MEAN
 #define WIN32_LEAN_AND_MEAN
 #endif
-#include <windows.h>
-
 #include <string.h>
+#include <windows.h>
 
 #include <fstream>
 #include <iostream>
@@ -130,6 +129,19 @@ bool ReadSymlink(const wstring& abs_path, wstring* target, wstring* error) {
   return false;
 }
 
+bool IsDeveloperModeEnabled() {
+  DWORD val = 0;
+  DWORD valSize = sizeof(val);
+  if (RegGetValueW(
+          HKEY_LOCAL_MACHINE,
+          L"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\AppModelUnlock",
+          L"AllowDevelopmentWithoutDevLicense", RRF_RT_DWORD, nullptr, &val,
+          &valSize) != ERROR_SUCCESS) {
+    return false;
+  }
+  return val != 0;
+}
+
 }  // namespace
 
 class RunfilesCreator {
@@ -236,15 +248,13 @@ class RunfilesCreator {
   }
 
   bool DoesCreatingSymlinkNeedAdminPrivilege(const wstring& runfiles_base_dir) {
-    wstring dummy_link = runfiles_base_dir + L"\\dummy_link";
-    wstring dummy_target = runfiles_base_dir + L"\\dummy_target";
-
-    // Try creating symlink without admin privilege.
-    if (CreateSymbolicLinkW(dummy_link.c_str(), dummy_target.c_str(),
-                            SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE)) {
-      DeleteFileOrDie(dummy_link);
+    // Creating symlinks without admin privilege is enabled by Developer Mode,
+    // available since Windows Version 1703.
+    if (IsDeveloperModeEnabled()) {
       return false;
     }
+    wstring dummy_link = runfiles_base_dir + L"\\dummy_link";
+    wstring dummy_target = runfiles_base_dir + L"\\dummy_target";
 
     // Try creating symlink with admin privilege
     if (CreateSymbolicLinkW(dummy_link.c_str(), dummy_target.c_str(), 0)) {
-- 
2.26.0.windows.1

