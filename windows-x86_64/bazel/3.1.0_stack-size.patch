From 6bd802653bbd3c2e63fcef9c81edb1b27c984521 Mon Sep 17 00:00:00 2001
From: pcloudy <pcloudy@google.com>
Date: Wed, 27 May 2020 04:33:15 -0700
Subject: [PATCH 2/3] Remove stack size hard limit for WAITER_POOL in
 WindowsSubprocess.java

This is a similar fix as https://github.com/bazelbuild/bazel/commit/b3cc772990138a3b8a4f0b7f2944ee35866aa099

RELNOTES: None
PiperOrigin-RevId: 313365662
---
 .../build/lib/windows/WindowsSubprocess.java  | 25 +++++++++++--------
 1 file changed, 14 insertions(+), 11 deletions(-)

diff --git a/src/main/java/com/google/devtools/build/lib/windows/WindowsSubprocess.java b/src/main/java/com/google/devtools/build/lib/windows/WindowsSubprocess.java
index c156236970..d75c619f4a 100644
--- a/src/main/java/com/google/devtools/build/lib/windows/WindowsSubprocess.java
+++ b/src/main/java/com/google/devtools/build/lib/windows/WindowsSubprocess.java
@@ -114,17 +114,20 @@ public class WindowsSubprocess implements Subprocess {
   }
 
   private static final AtomicInteger THREAD_SEQUENCE_NUMBER = new AtomicInteger(1);
-  private static final ExecutorService WAITER_POOL = Executors.newCachedThreadPool(
-      new ThreadFactory() {
-        @Override
-        public Thread newThread(Runnable runnable) {
-          Thread thread = new Thread(null, runnable,
-              "Windows-Process-Waiter-Thread-" + THREAD_SEQUENCE_NUMBER.getAndIncrement(),
-              16 * 1024);
-          thread.setDaemon(true);
-          return thread;
-        }
-      });
+  private static final ExecutorService WAITER_POOL =
+      Executors.newCachedThreadPool(
+          new ThreadFactory() {
+            @Override
+            public Thread newThread(Runnable runnable) {
+              Thread thread =
+                  new Thread(
+                      null,
+                      runnable,
+                      "Windows-Process-Waiter-Thread-" + THREAD_SEQUENCE_NUMBER.getAndIncrement());
+              thread.setDaemon(true);
+              return thread;
+            }
+          });
 
   private volatile long nativeProcess;
   private final OutputStream stdinStream;
-- 
2.26.0.windows.1

