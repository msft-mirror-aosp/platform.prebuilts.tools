load("//tools/adt/idea/studio:studio.bzl", "studio_data")
load("//tools/base/bazel:jvm_import.bzl", "jvm_import")

config_setting(
    name = "osx-arm64",
    values = {"host_cpu": "darwin_arm64"},
    visibility = ["//visibility:public"],
)

config_setting(
    name = "osx-x86_64",
    values = {"host_cpu": "darwin"},
    visibility = ["//visibility:public"],
)

config_setting(
    name = "windows-x86_64",
    values = {"host_cpu": "x64_windows"},
    visibility = ["//visibility:public"],
)

config_setting(
    name = "linux-x86_64",
    values = {"host_cpu": "k8"},
    visibility = ["//visibility:public"],
)

java_import(
    name = "org.jetbrains.kotlin.kotlin-gradle-plugin.1.5.21",
    jars = ["repository/org/jetbrains/kotlin/kotlin-gradle-plugin/1.5.21/kotlin-gradle-plugin-1.5.21.jar"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "io.grpc.protoc-gen-grpc-java.1.45.1_exe",
    srcs = select({
        "//prebuilts/tools/common/m2:osx-arm64": ["repository/io/grpc/protoc-gen-grpc-java/1.45.1/protoc-gen-grpc-java-1.45.1-osx-aarch_64.exe"],
        "//prebuilts/tools/common/m2:osx-x86_64": ["repository/io/grpc/protoc-gen-grpc-java/1.45.1/protoc-gen-grpc-java-1.45.1-osx-x86_64.exe"],
        "//prebuilts/tools/common/m2:windows-x86_64": ["repository/io/grpc/protoc-gen-grpc-java/1.45.1/protoc-gen-grpc-java-1.45.1-windows-x86_64.exe"],
        "//prebuilts/tools/common/m2:linux-x86_64": ["repository/io/grpc/protoc-gen-grpc-java/1.45.1/protoc-gen-grpc-java-1.45.1-linux-x86_64.exe"],
    }),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "ffmpeg-licenses",
    srcs = glob([
        "repository/org/bytedeco/ffmpeg-LICENSE*",
        "repository/org/bytedeco/ffmpeg-SOURCE_CODE*",
    ]),
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "utp-core-proto",
    jars = ["repository/com/google/testing/platform/core-proto/0.0.8-alpha08/core-proto-0.0.8-alpha08.jar"],
    visibility = ["//visibility:public"],
)

# This BUILD file was generated by //tools/base/bazel:java_import_generator, please do not edit.
load("//tools/base/app-inspection:app_inspection.bzl", "app_inspection_aar_import")

app_inspection_aar_import(
    name = "androidx.inspection.inspection.1.0.0",
    aar = "repository/androidx/inspection/inspection/1.0.0/inspection-1.0.0.aar",
    pom = "repository/androidx/inspection/inspection/1.0.0/inspection-1.0.0.pom",
    visibility = ["//visibility:public"],
)

java_import(
    name = "javax.annotation.javax.annotation-api.1.3.2",
    jars = ["repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar"],
    visibility = ["//visibility:public"],
)

java_import(
    name = "com.google.android.gms.play-services-location.11.8.0",
    jars = ["repository/com/google/android/gms/play-services-location/11.8.0/play-services-location-11.8.0.jar"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "com.google.protobuf.protoc.3.19.3_exe",
    srcs = select({
        "//prebuilts/tools/common/m2:osx-arm64": ["repository/com/google/protobuf/protoc/3.19.3/protoc-3.19.3-osx-aarch_64.exe"],
        "//prebuilts/tools/common/m2:osx-x86_64": ["repository/com/google/protobuf/protoc/3.19.3/protoc-3.19.3-osx-x86_64.exe"],
        "//prebuilts/tools/common/m2:windows-x86_64": ["repository/com/google/protobuf/protoc/3.19.3/protoc-3.19.3-windows-x86_64.exe"],
        "//prebuilts/tools/common/m2:linux-x86_64": ["repository/com/google/protobuf/protoc/3.19.3/protoc-3.19.3-linux-x86_64.exe"],
    }),
    visibility = ["//visibility:public"],
)

java_import(
    name = "com.google.protobuf.protobuf-java-util.3.19.3",
    jars = ["repository/com/google/protobuf/protobuf-java-util/3.19.3/protobuf-java-util-3.19.3.jar"],
    visibility = ["//visibility:public"],
)

java_import(
    name = "com.google.protobuf.protobuf-java.3.19.3",
    jars = ["repository/com/google/protobuf/protobuf-java/3.19.3/protobuf-java-3.19.3.jar"],
    visibility = ["//visibility:public"],
)

# Manually extrated proto files from the jar
# So bazel can consume them without wrapping the
# proto compiler in a extract jar step.
filegroup(
    name = "com.google.protobuf.protobuf-java.3.19.3.include_include",
    srcs = glob(["repository/com/google/protobuf/protobuf-java/3.19.3/**/*.proto"]),
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "truth_files",
    # do not sort: must match IML order
    srcs = [
        "repository/com/google/truth/truth/0.42/truth-0.42.jar",
        "repository/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "javax-inject_files",
    srcs = ["repository/javax/inject/javax.inject/1/javax.inject-1.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "equalsverifier_files",
    srcs = ["repository/nl/jqno/equalsverifier/equalsverifier/3.8/equalsverifier-3.8.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "mockito_files",
    # do not sort: must match IML order
    srcs = [
        "repository/org/mockito/mockito-core/4.8.0/mockito-core-4.8.0.jar",
        "repository/net/bytebuddy/byte-buddy/1.12.14/byte-buddy-1.12.14.jar",
        "repository/net/bytebuddy/byte-buddy-agent/1.12.14/byte-buddy-agent-1.12.14.jar",
    ],
    visibility = ["//visibility:public"],
)

load("//tools/base/bazel:jvm_import.bzl", "jvm_import")

# managed by go/iml_to_build
jvm_import(
    name = "junit-4.12",
    jars = ["repository/junit/junit/4.12/junit-4.12.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "hamcrest-core-1.3",
    jars = ["repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"],
    visibility = ["//visibility:public"],
)

java_import(
    name = "antlr4-runtime",
    jars = ["repository/org/antlr/antlr4-runtime/4.5.3/antlr4-runtime-4.5.3.jar"],
    visibility = ["//tools/data-binding:__pkg__"],
)

# managed by go/iml_to_build
jvm_import(
    name = "juniversalchardet",
    jars = ["repository/com/googlecode/juniversalchardet/juniversalchardet/1.0.3/juniversalchardet-1.0.3.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "javapoet",
    jars = ["repository/com/squareup/javapoet/1.10.0/javapoet-1.10.0.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "jetifier-core",
    jars = ["repository/com/android/tools/build/jetifier/jetifier-core/1.0.0-beta10/jetifier-core-1.0.0-beta10.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "compile-testing_files",
    srcs = ["repository/com/google/testing/compile/compile-testing/0.16/compile-testing-0.16.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "commons-lang",
    jars = ["repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "auto-common",
    jars = ["repository/com/google/auto/auto-common/0.10/auto-common-0.10.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "kxml2_files",
    srcs = ["repository/net/sf/kxml/kxml2/2.3.0/kxml2-2.3.0.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "dexlib2_files",
    # do not sort: must match IML order
    srcs = ["repository/org/smali/dexlib2/2.5.2/dexlib2-2.5.2.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "HdrHistogram_files",
    srcs = ["repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "jimfs_files",
    srcs = ["repository/com/google/jimfs/jimfs/1.1/jimfs-1.1.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "asm-tools_files",
    # do not sort: must match IML order
    srcs = [
        "repository/org/ow2/asm/asm-analysis/9.1/asm-analysis-9.1.jar",
        "repository/org/ow2/asm/asm-tree/9.1/asm-tree-9.1.jar",
        "repository/org/ow2/asm/asm/9.1/asm-9.1.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "truth-java8-extension_files",
    srcs = ["repository/com/google/truth/extensions/truth-java8-extension/0.42/truth-java8-extension-0.42.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "flatbuffers-java",
    jars = ["repository/com/google/flatbuffers/flatbuffers-java/1.12.0/flatbuffers-java-1.12.0.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "tensorflow-lite-metadata",
    jars = ["repository/org/tensorflow/tensorflow-lite-metadata/0.1.0-rc2/tensorflow-lite-metadata-0.1.0-rc2.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "easymock_files",
    srcs = ["repository/org/easymock/easymock/4.0.2/easymock-4.0.2.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "sqlite_files",
    srcs = ["repository/org/xerial/sqlite-jdbc/3.34.0/sqlite-jdbc-3.34.0.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "guava-testlib_files",
    srcs = ["repository/com/google/guava/guava-testlib/25.1-jre/guava-testlib-25.1-jre.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "zxing-core_files",
    srcs = ["repository/com/google/zxing/core/3.4.0/core-3.4.0.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "aapt-proto_files",
    srcs = ["repository/com/android/tools/build/aapt2-proto/0.3.1/aapt2-proto-0.3.1.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "baksmali_files",
    # do not sort: must match IML order
    srcs = [
        "repository/org/smali/baksmali/2.5.2/baksmali-2.5.2.jar",
        "repository/org/smali/util/2.5.2/util-2.5.2.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "okio",
    jars = ["repository/com/squareup/okio/okio/1.14.0/okio-1.14.0.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "moshi",
    # do not sort: must match IML order
    jars = [
        "repository/com/squareup/moshi/moshi/1.6.0/moshi-1.6.0.jar",
        "repository/com/squareup/okio/okio/1.14.0/okio-1.14.0.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "kotlinx-coroutines-guava_files",
    srcs = ["repository/org/jetbrains/kotlinx/kotlinx-coroutines-guava/1.5.0/kotlinx-coroutines-guava-1.5.0.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "JUnit4",
    # do not sort: must match IML order
    jars = [
        "repository/junit/junit/4.12/junit-4.12.jar",
        "repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "JSch",
    jars = ["repository/com/jcraft/jsch/0.1.55/jsch-0.1.55.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "commons-lang3-3.3.2",
    jars = ["repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "commons-io-2.4",
    jars = ["repository/commons-io/commons-io/2.4/commons-io-2.4.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "eclipse-layout-kernel",
    # do not sort: must match IML order
    jars = [
        "repository/org/eclipse/elk/org.eclipse.elk.alg.layered/0.3.0/org.eclipse.elk.alg.layered-0.3.0.jar",
        "repository/org/eclipse/elk/org.eclipse.elk.core/0.3.0/org.eclipse.elk.core-0.3.0.jar",
        "repository/org/eclipse/elk/org.eclipse.elk.graph/0.3.0/org.eclipse.elk.graph-0.3.0.jar",
        "repository/org/eclipse/emf/org.eclipse.emf.common/2.12.0/org.eclipse.emf.common-2.12.0.jar",
        "repository/org/eclipse/emf/org.eclipse.emf.ecore/2.12.0/org.eclipse.emf.ecore-2.12.0.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "gradle-tooling-api-5.3.1",
    jars = ["repository/org/gradle/gradle-tooling-api/5.3.1/gradle-tooling-api-5.3.1.jar"],
    visibility = ["//visibility:public"],
)

java_import(
    name = "jarjar_asm",
    jars = [
        "repository/org/ow2/asm/asm/9.3/asm-9.3.jar",
        "repository/org/ow2/asm/asm-commons/9.3/asm-commons-9.3.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "ffmpeg_files",
    # do not sort: must match IML order
    srcs = [
        "repository/org/bytedeco/ffmpeg/5.0-1.5.7/ffmpeg-5.0-1.5.7.jar",
        "repository/org/bytedeco/javacpp/1.5.7/javacpp-1.5.7.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "ffmpeg-platform_files",
    # do not sort: must match IML order
    srcs = [
        "repository/org/bytedeco/ffmpeg-platform/5.0-1.5.7/ffmpeg-platform-5.0-1.5.7.jar",
        "repository/org/bytedeco/ffmpeg/5.0-1.5.7/ffmpeg-5.0-1.5.7-linux-x86_64.jar",
        "repository/org/bytedeco/ffmpeg/5.0-1.5.7/ffmpeg-5.0-1.5.7-macosx-arm64.jar",
        "repository/org/bytedeco/ffmpeg/5.0-1.5.7/ffmpeg-5.0-1.5.7-macosx-x86_64.jar",
        "repository/org/bytedeco/ffmpeg/5.0-1.5.7/ffmpeg-5.0-1.5.7-windows-x86_64.jar",
        "repository/org/bytedeco/javacpp-platform/1.5.7/javacpp-platform-1.5.7.jar",
        "repository/org/bytedeco/javacpp/1.5.7/javacpp-1.5.7-linux-x86_64.jar",
        "repository/org/bytedeco/javacpp/1.5.7/javacpp-1.5.7-macosx-arm64.jar",
        "repository/org/bytedeco/javacpp/1.5.7/javacpp-1.5.7-macosx-x86_64.jar",
        "repository/org/bytedeco/javacpp/1.5.7/javacpp-1.5.7-windows-x86_64.jar",
    ],
    visibility = ["//visibility:public"],
)

studio_data(
    name = "ffmpeg-platform-bundle",
    files = [
        "repository/org/bytedeco/ffmpeg-platform/5.0-1.5.7/ffmpeg-platform-5.0-1.5.7.jar",
        "repository/org/bytedeco/javacpp-platform/1.5.7/javacpp-platform-1.5.7.jar",
    ],
    files_linux = [
        "repository/org/bytedeco/ffmpeg/5.0-1.5.7/ffmpeg-5.0-1.5.7-linux-x86_64.jar",
        "repository/org/bytedeco/javacpp/1.5.7/javacpp-1.5.7-linux-x86_64.jar",
    ],
    files_mac = [
        "repository/org/bytedeco/ffmpeg/5.0-1.5.7/ffmpeg-5.0-1.5.7-macosx-x86_64.jar",
        "repository/org/bytedeco/javacpp/1.5.7/javacpp-1.5.7-macosx-x86_64.jar",
    ],
    files_mac_arm = [
        "repository/org/bytedeco/ffmpeg/5.0-1.5.7/ffmpeg-5.0-1.5.7-macosx-arm64.jar",
        "repository/org/bytedeco/javacpp/1.5.7/javacpp-1.5.7-macosx-arm64.jar",
    ],
    files_win = [
        "repository/org/bytedeco/ffmpeg/5.0-1.5.7/ffmpeg-5.0-1.5.7-windows-x86_64.jar",
        "repository/org/bytedeco/javacpp/1.5.7/javacpp-1.5.7-windows-x86_64.jar",
    ],
    mappings = {
        "prebuilts/tools/common/m2/repository/org/bytedeco/ffmpeg-platform/5.0-1.5.7/": "",
        "prebuilts/tools/common/m2/repository/org/bytedeco/ffmpeg/5.0-1.5.7/": "",
        "prebuilts/tools/common/m2/repository/org/bytedeco/javacpp-platform/1.5.7/": "",
        "prebuilts/tools/common/m2/repository/org/bytedeco/javacpp/1.5.7/": "",
    },
    visibility = ["//visibility:public"],
)

# This is the Kotlin compiler used for building our Kotlin sources in Bazel.
# It is declared here manually in order to avoid affecting version resolution
# for the main maven repo---because for various reasons our compiler version
# might not match the version of the kotlin-stdlib we want on the classpath.
jvm_import(
    name = "kotlin-compiler",
    jars = [
        # This list can be computed by querying the deps of
        # @maven//:org.jetbrains.kotlin.kotlin-compiler_<VERSION>.
        "repository/org/jetbrains/annotations/13.0/annotations-13.0.jar",
        "repository/org/jetbrains/intellij/deps/trove4j/1.0.20181211/trove4j-1.0.20181211.jar",
        "repository/org/jetbrains/kotlin/kotlin-compiler/1.7.0/kotlin-compiler-1.7.0.jar",
        "repository/org/jetbrains/kotlin/kotlin-reflect/1.7.0/kotlin-reflect-1.7.0.jar",
        "repository/org/jetbrains/kotlin/kotlin-script-runtime/1.7.0/kotlin-script-runtime-1.7.0.jar",
        "repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.7.0/kotlin-stdlib-common-1.7.0.jar",
        "repository/org/jetbrains/kotlin/kotlin-stdlib/1.7.0/kotlin-stdlib-1.7.0.jar",
    ],
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "jvm-abi-gen-plugin",
    jars = [
        "repository/org/jetbrains/kotlin/jvm-abi-gen/1.7.0/jvm-abi-gen-1.7.0.jar",
    ],
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "compose-compiler-hosted",
    jars = [
        "repository/org/jetbrains/compose/compiler/compiler-hosted/1.2.0/compiler-hosted-1.2.0.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "groovy-3.0.9",
    jars = ["repository/org/codehaus/groovy/groovy/3.0.9/groovy-3.0.9.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "kotlin-test_files",
    srcs = ["repository/org/jetbrains/kotlin/kotlin-test/1.7.10/kotlin-test-1.7.10.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "jetbrains.kotlinx.coroutines.test_files",
    srcs = ["repository/org/jetbrains/kotlinx/kotlinx-coroutines-test/1.5.0/kotlinx-coroutines-test-1.5.0.jar"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "all",
    testonly = True,
    srcs = glob(["**/*"]),
    visibility = ["//tools/base/bazel:__pkg__"],
)

# managed by go/iml_to_build
jvm_import(
    name = "compose-desktop-animation",
    # do not sort: must match IML order
    jars = [
        "repository/org/jetbrains/compose/animation/animation-core-desktop/1.1.1/animation-core-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/animation/animation-desktop/1.1.1/animation-desktop-1.1.1.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "compose-desktop-foundation",
    # do not sort: must match IML order
    jars = [
        "repository/org/jetbrains/compose/foundation/foundation-layout-desktop/1.1.1/foundation-layout-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/foundation/foundation-desktop/1.1.1/foundation-desktop-1.1.1.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "compose-desktop-material",
    # do not sort: must match IML order
    jars = [
        "repository/org/jetbrains/compose/material/material-desktop/1.1.1/material-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/material/material-icons-core-desktop/1.1.1/material-icons-core-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/material/material-ripple-desktop/1.1.1/material-ripple-desktop-1.1.1.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "compose-desktop-runtime",
    # do not sort: must match IML order
    jars = [
        "repository/org/jetbrains/compose/runtime/runtime-desktop/1.1.1/runtime-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/runtime/runtime-saveable-desktop/1.1.1/runtime-saveable-desktop-1.1.1.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "compose-desktop-ui",
    # do not sort: must match IML order
    jars = [
        "repository/org/jetbrains/compose/ui/ui-desktop/1.1.1/ui-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/ui/ui-geometry-desktop/1.1.1/ui-geometry-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/ui/ui-graphics-desktop/1.1.1/ui-graphics-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/ui/ui-text-desktop/1.1.1/ui-text-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/ui/ui-unit-desktop/1.1.1/ui-unit-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/ui/ui-util-desktop/1.1.1/ui-util-desktop-1.1.1.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "skiko",
    # do not sort: must match IML order
    jars = [
        "repository/org/jetbrains/skiko/skiko-awt/0.7.16/skiko-awt-0.7.16.jar",
        "repository/org/jetbrains/skiko/skiko-awt-runtime-linux-x64/0.7.16/skiko-awt-runtime-linux-x64-0.7.16.jar",
        "repository/org/jetbrains/skiko/skiko-awt-runtime-macos-arm64/0.7.16/skiko-awt-runtime-macos-arm64-0.7.16.jar",
        "repository/org/jetbrains/skiko/skiko-awt-runtime-macos-x64/0.7.16/skiko-awt-runtime-macos-x64-0.7.16.jar",
        "repository/org/jetbrains/skiko/skiko-awt-runtime-windows-x64/0.7.16/skiko-awt-runtime-windows-x64-0.7.16.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "compose-desktop-ui-test",
    # do not sort: must match IML order
    jars = [
        "repository/org/jetbrains/compose/ui/ui-test-junit4-desktop/1.1.1/ui-test-junit4-desktop-1.1.1.jar",
        "repository/org/jetbrains/compose/ui/ui-test-desktop/1.1.1/ui-test-desktop-1.1.1.jar",
    ],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "trace-perfetto-library",
    jars = ["repository/androidx/tracing/tracing-perfetto-common/1.0.0-alpha01/tracing-perfetto-common-1.0.0-alpha01.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "jsr305-2.0.1",
    jars = ["repository/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
jvm_import(
    name = "javax-servlet",
    jars = ["repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "gson_files",
    srcs = ["repository/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar"],
    visibility = ["//visibility:public"],
)

# managed by go/iml_to_build
filegroup(
    name = "oauth2_files",
    # do not sort: must match IML order
    srcs = [
        "repository/com/google/apis/google-api-services-oauth2/v2-rev150-1.22.0/google-api-services-oauth2-v2-rev150-1.22.0.jar",
        "repository/com/google/auth/google-auth-library-oauth2-http/0.22.2/google-auth-library-oauth2-http-0.22.2.jar",
    ],
    visibility = ["//visibility:public"],
)
