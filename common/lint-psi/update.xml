<!-- Update intellij-core and uast libraries from a built Kotlin distribution.
     Consult README for more details. -->
<project xmlns:if="ant:if" xmlns:unless="ant:unless" name="Kotlin" default="dist">
    <fail message="Property &quot;kotlin_compiler_repo&quot; needs to be set" unless="kotlin_compiler_repo"/>
    <fail message="Property &quot;kotlin_plugin_repo&quot; needs to be set" unless="kotlin_plugin_repo"/>

    <property environment="env"/>
    <property name="gradle-home" value="${user.home}/.gradle" unless:set="env.GRADLE_USER_HOME"/>
    <property name="gradle-home" value="${env.GRADLE_USER_HOME}" if:set="env.GRADLE_USER_HOME"/>

    <property name="output" value="${basedir}/temp"/>
    <property name="kotlin-dist" value="${kotlin_plugin_repo}/out/artifacts/KotlinPluginCommunity"/>

    <loadproperties srcFile="${kotlin_compiler_repo}/gradle/versions.properties" />
    <property name="build-version" value="${versions.intellijSdk}"/>

    <property name="kotlin-build-deps" value="${gradle-home}/kotlin-build-dependencies/repo/kotlin.build"/>
    <property name="idea.sdk" value="${kotlin-build-deps}/ideaIC/${build-version}/artifacts/plugins/java"/>
    <property name="idea.sources" value="${kotlin-build-deps}/sources/intellij-${build-version}-sources.jar"/>

    <echo message="Assembling intellij-core, UAST and Kotlin version ${build-version}"/>


    <property name="temp" value="${basedir}/temp"/>
    <property name="dist-uast" value="${basedir}/uast"/>
    <property name="dist-intellij-core" value="${basedir}/intellij-core"/>
    <property name="dist-kotlin-compiler" value="${basedir}/kotlin-compiler"/>

    <target name="dist" depends="clean,uast,intellij-core"/>

    <target name="clean">
		<delete>
		    <fileset dir="${basedir}">
		        <include name="**/*.jar"/>
		        <exclude name="platform-icons.jar"/>
		    </fileset>
		</delete>
        <delete dir="${temp}"/>
    </target>

    <macrodef name="cleandir">
        <attribute name="dir"/>

        <sequential>
            <echo message="Cleaning @{dir}"/>
            <delete dir="@{dir}" failonerror="false"/>
            <mkdir dir="@{dir}"/>
        </sequential>
    </macrodef>

    <target name="uast">
        <echo message="Building uast artifacts into ${dist-uast}"/>
        <delete dir="${temp}"/>
        <mkdir dir="${temp}"/>
        <unzip src="${idea.sdk}/lib/java-api.jar" dest="${temp}/classes/uast-common">
            <patternset>
                <include name="org/jetbrains/uast/**/*.class"/>
                <include name="META-INF/intellij.platform.uast.kotlin_module"/>
            </patternset>
        </unzip>

        <jar destfile="${dist-uast}/uast-common.jar">
            <fileset dir="${temp}/classes/uast-common"/>
        </jar>

        <unzip src="${idea.sdk}/lib/java-impl.jar" dest="${temp}/classes/uast-java">
            <patternset>
                <include name="org/jetbrains/uast/java/**/*.class"/>
                <include name="META-INF/intellij.platform.uast.kotlin_module"/>
            </patternset>
        </unzip>

        <jar destfile="${dist-uast}/uast-java.jar">
            <fileset dir="${temp}/classes/uast-java"/>
        </jar>

        <unzip src="${idea.sources}" dest="${temp}/classes/uast-common-sources">
            <patternset>
                <include name="org/jetbrains/uast/**/*.java"/>
                <include name="org/jetbrains/uast/**/*.kt"/>
                <!-- Included in uast-java -->
                <exclude name="org/jetbrains/uast/java/**/*"/>
            </patternset>
        </unzip>

        <jar jarfile="${dist-uast}/uast-common-sources.jar">
            <fileset dir="${temp}/classes/uast-common-sources"/>
        </jar>

        <unzip src="${idea.sources}" dest="${temp}/classes/uast-java-sources">
            <patternset>
                <include name="org/jetbrains/uast/java/**/*.java"/>
                <include name="org/jetbrains/uast/java/**/*.kt"/>
            </patternset>
        </unzip>

        <jar jarfile="${dist-uast}/uast-java-sources.jar">
            <fileset dir="${temp}/classes/uast-java-sources"/>
        </jar>

        <copy file="${kotlin-dist}/lib/kotlin-uast-kotlin.jar" tofile="${dist-uast}/uast-kotlin.jar"></copy>

        <jar jarfile="${dist-uast}/uast-kotlin-sources.jar">
            <fileset dir="${kotlin_plugin_repo}/uast/uast-kotlin/src"/>
        </jar>

        <delete dir="${temp}"/>
    </target>

    <target name="intellij-core">
        <delete dir="${temp}"/>
        <mkdir dir="${temp}"/>
        <echo message="Building intellij-core artifacts into ${dist-intellij-core} from ${idea.sdk}"/>
        <cleandir dir="${temp}/classes/core"/>
        <unzip src="${kotlin-dist}/kotlinc/lib/kotlin-compiler.jar" dest="${temp}/classes/core">
            <patternset>
                <!-- Separate dependency: don't pack it in here -->
                <exclude name="gnu/trove/**/*"/>
                <exclude name="trove4j_changes.txt"/>

                <!-- Separate dependency for Guava -->
                <exclude name="com/google/common/**/*" />
                <exclude name="com/google/thirdparty/publicsuffix/**/*" />
                <exclude name="META-INF/maven/com.google.guava/**/*" />

                <!-- We don't need Kotlin JavaScript support in lint -->
                <exclude name="com/google/gwt/dev/js//**/*" />
            </patternset>
        </unzip>

        <!-- Kotlin script compiler plugin. -->
        <unzip src="${kotlin-dist}/kotlinc/lib/kotlin-script-runtime.jar"
               dest="${temp}/classes/core"/>
        <unzip src="${kotlin-dist}/kotlinc/lib/kotlin-scripting-compiler.jar"
               dest="${temp}/classes/core"/>
        <unzip src="${kotlin-dist}/kotlinc/lib/kotlin-scripting-compiler-impl.jar"
               dest="${temp}/classes/core"/>
        <unzip src="${kotlin-dist}/kotlinc/lib/kotlin-scripting-common.jar"
               dest="${temp}/classes/core"/>
        <unzip src="${kotlin-dist}/kotlinc/lib/kotlin-scripting-jvm.jar"
               dest="${temp}/classes/core"/>

        <!-- JetBrains annotations. -->
        <unzip src="${kotlin-dist}/kotlinc/lib/annotations-13.0.jar"
               dest="${temp}/classes/core"/>

        <!--
            Workaround for https://youtrack.jetbrains.com/issue/IDEA-178656
            UAST: Some UAST classes require PlatformIcons to be present
            We can't just copy the relevant icons because class initializer
            attempts to load everything. Instead supply a hacked PlatformIcons.class
            which provides a tiny subset of stubs. The source for the hacked
            class is included in the jar, so only package the .class files within.
         -->
        <unzip src="${basedir}/platform-icons.jar" dest="${temp}/classes/core">
            <patternset>
                <include name="**/*"/>
            </patternset>
        </unzip>

        <jar jarfile="${dist-intellij-core}/intellij-core.jar">
            <fileset dir="${temp}/classes/core">
                <!-- Keep kotlin out of this jar; packaged below (keep lists in sync) -->
                <exclude name="kotlin/**/*" />
                <exclude name="kotlinx/**/*" />
                <exclude name="META-INF/*kotlin_module" />
                <exclude name="META-INF/extensions/**" />
                <exclude name="org/jetbrains/kotlin/**/*" />
                <exclude name="org/jetbrains/jps/model/**/*" />
                <exclude name="kotlinManifest.properties" />
            </fileset>
        </jar>

        <jar jarfile="${dist-kotlin-compiler}/kotlin-compiler.jar">
            <fileset dir="${temp}/classes/core">
                <include name="kotlin/**/*" />
                <include name="kotlinx/**/*" />
                <include name="META-INF/*kotlin_module" />
                <include name="META-INF/extensions/**" />
                <include name="org/jetbrains/kotlin/**/*" />
                <include name="org/jetbrains/jps/model/**/*" />
                <include name="kotlinManifest.properties" />
            </fileset>
        </jar>

        <unzip src="${idea.sources}" dest="${temp}/classes/intellij-core-sources">
            <patternset>
                <include name="org/picocontainer/**/*"/>
                <include name="com/intellij/**/*.java"/>
                <include name="com/intellij/**/*.kt"/>
                <exclude name="com/intellij/codeInsight/template/**"/>
                <exclude name="com/intellij/codeInsight/editorActions/**"/>
                <exclude name="com/intellij/codeInsight/intention/**"/>
                <exclude name="com/intellij/openapi/externalSystem/**"/>
                <exclude name="com/intellij/openapi/vcs/**"/>
                <exclude name="com/intellij/vcs/**"/>
                <exclude name="com/intellij/ide/actions/**"/>
                <exclude name="com/intellij/ide/projectView/**"/>
            </patternset>
        </unzip>

        <jar jarfile="${dist-intellij-core}/intellij-core-sources.jar">
            <fileset dir="${temp}/classes/intellij-core-sources"/>
        </jar>


        <jar jarfile="${dist-kotlin-compiler}/kotlin-compiler-sources.jar">
            <fileset dir="${kotlin_compiler_repo}/compiler/frontend/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/frontend.java/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/light-classes/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/util/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/builtins-serializer/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/cli/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/cli/cli-common/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/container/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/preloader/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/resolution/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/serialization/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
            <fileset dir="${kotlin_compiler_repo}/compiler/psi/src">
                <include name="**/*.java" />
                <include name="**/*.kt" />
            </fileset>
        </jar>

        <delete dir="${temp}"/>
    </target>
</project>

