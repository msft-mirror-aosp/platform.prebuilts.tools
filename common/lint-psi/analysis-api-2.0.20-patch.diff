diff --git a/analysis/symbol-light-classes/src/org/jetbrains/kotlin/analysis/providers/PsiDeclarationAndKtSymbolEqualityChecker.kt b/analysis/symbol-light-classes/src/org/jetbrains/kotlin/analysis/providers/PsiDeclarationAndKtSymbolEqualityChecker.kt
index 1913665003df..dee5f63014e1 100644
--- a/analysis/symbol-light-classes/src/org/jetbrains/kotlin/analysis/providers/PsiDeclarationAndKtSymbolEqualityChecker.kt
+++ b/analysis/symbol-light-classes/src/org/jetbrains/kotlin/analysis/providers/PsiDeclarationAndKtSymbolEqualityChecker.kt
@@ -29,7 +29,7 @@ internal object PsiDeclarationAndKtSymbolEqualityChecker {
     }
 
     private fun KtAnalysisSession.returnTypesMatch(psi: PsiMethod, symbol: KtCallableSymbol): Boolean {
-        if (symbol is KtConstructorSymbol) return true
+        if (symbol is KtConstructorSymbol) return psi.isConstructor
         return psi.returnType?.let {
             isTheSameTypes(
                 psi,
@@ -41,6 +41,8 @@ internal object PsiDeclarationAndKtSymbolEqualityChecker {
     }
 
     private fun typeParametersMatch(psi: PsiMethod, symbol: KtCallableSymbol): Boolean {
+        // PsiMethod for constructor won't have type parameters
+        if (symbol is KtConstructorSymbol) return psi.isConstructor
         if (psi.typeParameters.size != symbol.typeParameters.size) return false
         psi.typeParameters.zip(symbol.typeParameters) { psiTypeParameter, typeParameterSymbol ->
             if (psiTypeParameter.name != typeParameterSymbol.name.asString()) return false
