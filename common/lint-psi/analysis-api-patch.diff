diff --git a/analysis/analysis-api-standalone/src/org/jetbrains/kotlin/analysis/project/structure/impl/KtModuleUtils.kt b/analysis/analysis-api-standalone/src/org/jetbrains/kotlin/analysis/project/structure/impl/KtModuleUtils.kt
index 527966765db..16284fd6828 100644
--- a/analysis/analysis-api-standalone/src/org/jetbrains/kotlin/analysis/project/structure/impl/KtModuleUtils.kt
+++ b/analysis/analysis-api-standalone/src/org/jetbrains/kotlin/analysis/project/structure/impl/KtModuleUtils.kt
@@ -61,7 +61,8 @@ internal fun TargetPlatform.getAnalyzerServices(): PlatformDependentAnalyzerServ
  * Such source roots are either [KotlinSourceRoot] or [JavaSourceRoot], and thus
  * this util collects all `.kt` and `.java` files under source roots.
  */
-internal fun getSourceFilePaths(
+// Expose to use at AA FE1.0
+public fun getSourceFilePaths(
     compilerConfig: CompilerConfiguration,
     includeDirectoryRoot: Boolean = false,
 ): Set<String> {
@@ -127,7 +128,8 @@ private fun collectSourceFilePaths(
     )
 }

-internal inline fun <reified T : PsiFileSystemItem> getPsiFilesFromPaths(
+// Expose to use at AA FE1.0
+public inline fun <reified T : PsiFileSystemItem> getPsiFilesFromPaths(
     project: Project,
     paths: Collection<String>,
 ): List<T> {
@@ -146,7 +148,8 @@ internal inline fun <reified T : PsiFileSystemItem> getPsiFilesFromPaths(
     }
 }

-internal fun buildKtModuleProviderByCompilerConfiguration(
+// Expose to use at AA FE1.0
+public fun buildKtModuleProviderByCompilerConfiguration(
     compilerConfig: CompilerConfiguration,
     project: Project,
     ktFiles: List<KtFile>,
diff --git a/analysis/analysis-api-providers/src/org/jetbrains/kotlin/analysis/providers/impl/KotlinStaticDeclarationProvider.kt b/analysis/analysis-api-providers/src/org/jetbrains/kotlin/analysis/providers/impl/KotlinStaticDeclarationProvider.kt
index 265b7368cc87..72df0df7b893 100644
--- a/analysis/analysis-api-providers/src/org/jetbrains/kotlin/analysis/providers/impl/KotlinStaticDeclarationProvider.kt
+++ b/analysis/analysis-api-providers/src/org/jetbrains/kotlin/analysis/providers/impl/KotlinStaticDeclarationProvider.kt
@@ -253,6 +253,7 @@ public class KotlinStaticDeclarationProviderFactory(
             }
         }
 
+        if (System.getProperty("lint.use.fir.uast", "false").toBoolean()) {
         loadBuiltIns().forEach { ktFileStub ->
             val ktFile: KtFile = ktFileStub.psi
             addToFacadeFileMap(ktFile)
@@ -269,6 +270,7 @@ public class KotlinStaticDeclarationProviderFactory(
             // top-level functions and properties, built-in classes
             ktFileStub.childrenStubs.forEach(::indexStub)
         }
+        }
 
         // Indexing user source files
         files.forEach {

